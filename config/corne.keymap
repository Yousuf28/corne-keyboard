/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/backlight.h>

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  MO 3|  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | no  |
// | ESC  |  A  |  S  |  D  |  F  | 2/G |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | GUI  |  Z  |  X  |  C  | 1/V|  B  |   |  N  |  M   |  ,  |  .  |  /  | GUI  |

//      | LALT| CTRL/TAB  | LSHIFT/BKSP |   | LWR/SPC | CTRL/ENT | ALT |
                        bindings = <
   &none   &kp Q &kp W &kp E &kp R &kp T          &kp Y &kp U  &kp I     &kp O   &kp P    &none
   &kp ESC &kp A &kp S &kp D &kp F &lt 2 G          &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &mt LGUI LEFT  &kp Z &kp X &kp C &lt 1 V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &mt LGUI DEL
     &mt LALT DOWN &mt LCTRL TAB &mt LSHIFT BSPC             &lt 1 SPACE &mt LCTRL ENTER &mt LALT UP
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  .   |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | NO |
// |  `   |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |  .   |
// |   NO |  -  |  _  |  =  |  +  |  \  |   |     |  [  |  ]  |  {  |  }  |   NO |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &none &kp EXCL  &kp AT   &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET   &kp AMPS   &kp STAR &kp LPAR    &kp RPAR &none
   &kp GRAVE &kp N1  &kp N2  &kp N3   &kp N4   &kp N5  &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp DOT
   &none  &kp MINUS &kp UNDER &kp EQUAL  &kp PLUS  &kp BSLH        &kp SQT   &kp LBKT   &kp RBKT &kp LBRC    &kp RBRC &none
                                    &trans     &trans       &trans      &trans  &trans   &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &none  &bl BL_CYCLE &bl BL_INC &bl BL_DEC &kp DLLR &kp PRCNT   &kp HOME &kp END &caps_word &kp INS &none &none
   &none &kp LGUI   &kp K_MUTE &kp K_VOL_DN   &kp K_VOL_UP   &none    &kp LEFT &kp DOWN &kp UP       &kp RIGHT &kp BSLH &kp GRAVE
 &rgb_ug RGB_TOG &rgb_ug RGB_EFF &rgb_ug RGB_EFR   &rgb_ug RGB_BRI &rgb_ug RGB_BRD &rgb_ug RGB_BRD &kp UNDER &kp PLUS  &kp LBRC &kp RBRC &kp PIPE &kp TILDE
                             &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT

                        >;
                };

          other_layer {
                     bindings = <
   &none  &none  &none  &none  &none  &none                       &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12
   &none  &none    &none  &none    &none    &none                 &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6
   &none &none &none &none &none &none &none &none &none &none &none &none
                                   &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                       >;
        


                };


          
                
        };
};
